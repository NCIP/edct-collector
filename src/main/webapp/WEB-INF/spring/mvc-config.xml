<?xml version="1.0" encoding="UTF-8"?>

<!--L
  Copyright HealthCare IT, Inc.

  Distributed under the OSI-approved BSD 3-Clause License.
  See http://ncip.github.com/edct-collector/LICENSE.txt for details.
L-->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.directwebremoting.org/schema/spring-dwr 
 		http://www.directwebremoting.org/schema/spring-dwr-3.0.xsd">

	<context:component-scan base-package="com.healthcit.how.web"/>

	<!-- Open session in view -->
	<!--  this interceptor will keep JPA session open for the duration of request -->
	<bean id="openEntityManagerInViewInterceptor"
	    class="org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor">
	    <property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
    	<property name="alwaysUseFullPath" value="true"/>
    	<property name="interceptors">
    		<list>
    			<ref bean="openEntityManagerInViewInterceptor"/>
    		</list>
    	</property>
    </bean>

    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
    	<property name="alwaysUseFullPath" value="true"/>
    	<property name="synchronizeOnSession" value="true"/>
    </bean>

    <bean id="demoModuleMappingProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
      <property name="location">
        <value>classpath:DemoModuleMapping.txt</value>
      </property>
    </bean>

	<!--   bean class="com.healthcit.how.web.controller.FormAccessServiceController">
		<property name="demoModuleMappingFilename"  value="/DemoModuleMapping.txt"/>
	</bean  -->
	<!-- Used for file uploads -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

	<!-- The following view resolver is needed is we have a mix of tiles and non-tiles views
		 the definition file is views.properties and located on a classpath in resources directory (src/main/resources)-->
   <bean id="viewResolver" class="org.springframework.web.servlet.view.ResourceBundleViewResolver" >
   	   <property name="basename" value="views"/>
	   <!-- property name="defaultParentView" value="tilesTemplateView"/ -->
	   <property name="order" value="1"/>
   </bean>

	<!-- Resolves view names to protected .jsp resources within the /WEB-INF/tiles directory -->
   <!-- bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"   value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/tiles/"/>
		<property name="suffix" value=".jsp"/>
	</bean -->

   <!--  bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass"   value="org.springframework.web.servlet.view.tiles.TilesJstlView"/>
        <property name="order" value="2"/>
		<property name="prefix" value="/WEB-INF/tiles/"/>
		<property name="suffix" value=".jsp"/>
	</bean -->

	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions" value=" /WEB-INF/tiles-defs.xml"></property>
	</bean>

	<!-- This controller simply forward to a view based on the URL /main.html->main  -->
	<bean name="staticViewController" class="org.springframework.web.servlet.mvc.UrlFilenameViewController"/>

	<!--  map URLs to controllers -->
	<bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
	    <property name="urlMap">
	        <map>
	        	<entry key="*.page" value="staticViewController"/>
	        </map>
	    </property>
	</bean>

	<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />

	<!-- EXCEPTION HANDLER -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<map>
				<entry key="DataAccessException" value="data-error"/>
			</map>
		</property>
		<property name="order" value="1"/>
		<property name="warnLogCategory" value="INFO"/>
		<property name="defaultErrorView" value="general-error" />
	</bean>

	<!-- EMAIL SERVICE -->

	<!-- The mail sender -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	  <property name="host">
	  	<value>${cacure.smtp.host}</value>
	  </property>
	  <property name="port" value="25"/>
	</bean>

	<!-- The template message -->
	<bean id="templateMessage" class="org.springframework.mail.SimpleMailMessage">
	  <property name="from"><value>${cacure.smtp.defaultfrom}</value></property>
	  <property name="subject"><value>${cacure.smtp.defaultsubject}</value></property>
	</bean>

	<!-- The mailer service -->
	<bean id="emailService" class="com.healthcit.how.services.EmailService">
	  <property name="mailSender" ref="mailSender"/>
	  <property name="message" ref="templateMessage"/>
	</bean>

	<!-- VALIDATORS -->
	<bean id="userValidator" class="com.healthcit.how.web.validators.UserValidator"/>
	
	<!-- DWR BEANS -->
	<bean id="registrationService" class="com.healthcit.how.services.RegistrationService"/>
	
	<!-- PROPERTY EDITORS -->
	<bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
    	<property name="propertyEditorRegistrars">
	        <list>
	            <ref bean="customPropertyEditorRegistrar"/>
	        </list>
	    </property>
	</bean>
	<bean id="customPropertyEditorRegistrar" class="com.healthcit.how.web.propertyeditors.CustomPropertyEditorRegistrar"/>
	<bean id="securityQuestionsPropertyEditor" class="com.healthcit.how.web.propertyeditors.SecurityQuestionPropertyEditor"/>

</beans>
