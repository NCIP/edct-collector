<?php
/* $Id: phpcaptcha.module,v 1.00 2010/09/06 17:27:35 Hammertech Exp $ */

/**
 * @file
 * Uses the securimage's phpcaptcha to improve the CAPTCHA system.
 */

/**
 * Implementation of hook_help().
 */
function phpcaptcha_help($path, $arg) {
  $output = '';
  switch ($path) {
    case 'admin/modules#name':
      $output .= t('phpcaptcha');
      break;
    case 'admin/modules#description':
    case 'admin/user/captcha/phpcaptcha':
      $output .= t('Uses the <a href="@url" target="_blank">phpcaptcha</a> web service to improve the CAPTCHA system and protect email addresses.', array('@url' => url('http://www.phpcaptcha.org')));
      break;
    case 'admin/help#phpcaptcha':
      $output .= '<p>'.
        t('Uses the phpcaptcha library to improve the CAPTCHA module and protect email addresses. For more information on what reCAPTCHA is, visit <a href="@url" target="_blank">the official website</a>.', array('@url' => url('http://www.phpcaptcha.org'))) .
        '</p><h3>'.
        t('Configuration') .
        '</h3><p>'.
        t('The settings associated with phpcaptcha can be found in the <a href="@phpcaptchatab">phpcaptcha tab</a>, in the <a href="@captchasettings">CAPTCHA settings</a>. You must set your public and private reCAPTCHA keys in order to use the module. Once the public and private keys are set, visit the <a href="@captchasettings">CAPTCHA settings</a>, where you can choose where reCAPTCHA should be displayed.', array('@recaptchatab' => url('admin/user/captcha/phpcaptcha'), '@captchasettings' => url('admin/user/captcha'))) .
        '</p>';
      break;
  }
  return $output;
}

/**
 * Implementation of hook_menu().
 */
function phpcaptcha_menu() {
  $items = array();
  $items['admin/user/captcha/phpcaptcha'] = array(
    'title' => 'phpcaptcha',
    'description' => 'Administer the phpcaptcha web service.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('phpcaptcha_admin_settings'),
    'access arguments' => array('administer phpcaptcha'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'phpcaptcha.admin.inc',
  );

  // callback for generating an image
  $items['image_phpcaptcha'] = array(
    'page callback' => '_phpcaptcha_captcha_image',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );


  // callback for generating a sound representing code
  $items['sound_phpcaptcha'] = array(
    'page callback' => '_phpcaptcha_captcha_sound',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  
  return $items;
}

/**
 * Implementation of hook_perm().
 */
function phpcaptcha_perm() {
  return array('administer phpcaptcha');
}

/**
 * Implementation of hook_captcha().
 */
function phpcaptcha_captcha() {
  $args = func_get_args();
  $op = array_shift($args); 
  switch ($op) {
    case 'list':
      return array('phpcaptcha');

    case 'generate':
      $captcha_type = array_shift($args);
      $captcha = array();
      if ($captcha_type == 'phpcaptcha') {
        // Load the phpcaptcha library.

		
        $directory = drupal_get_path('module', 'phpcaptcha');
	//$refreshimg = check_url(url('/'.$directory.'/phpcaptcha/images/refresh.gif'));
	$refreshimg = check_url(url($directory.'/phpcaptcha/images/refresh.gif'));

        // Create the form. Captcha requires TRUE to be returned in solution.
        $captcha['solution'] = TRUE;
        $captcha['captcha_validate'] = 'phpcaptcha_captcha_validation';
        $html = '<img id="siimage" src="'.check_url(url('image_phpcaptcha')).'">';
	$refresh_button = '<a tabindex="-1" style="border-style: none;cursor:pointer" name="#" title="Refresh 
Image" 
onclick="document.getElementById(\'siimage\').src = \''.check_url(url('image_phpcaptcha')).'?sid=\' + Math.random(); return 
false"><img src="'.$refreshimg.'" alt="Reload Image" border="0" onclick="this.blur()" align="bottom" /></a>';


//$play_audio_url=url('/sound_phpcaptcha').'&bgColor1=#777&bgColor2=#fff&iconColor=#000&roundedCorner=5';
$play_audio_url=url('sound_phpcaptcha').'&bgColor1=#777&bgColor2=#fff&iconColor=#000&roundedCorner=5';
//$play_audio_url=check_url(url($play_audio_url));
$play_swf_url= url($directory.'/phpcaptcha/securimage_play.swf').'?audio='.$play_audio_url;
//$play_swf_url=(url($play_swf_url));

$sound_html='<div style="height:100px;padding-left:220px"><object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="19" height="19"
id="SecurImage_as3" align="middle">';
$sound_html.='<param name="allowScriptAccess" value="sameDomain" />';
$sound_html.='<param name="allowFullScreen" value="false" />';
$sound_html.='<param name="movie" value="'.$play_swf_url.'" />';
$sound_html.='<param name="quality" value="high" />';
$sound_html.='<param name="bgcolor" value="#ffffff" />';
$sound_html.='<embed src="'.$play_swf_url.'" quality="high" bgcolor="#ffffff" width="19" height="19" 
name="SecurImage_as3" align="middle" allowScriptAccess="sameDomain" allowFullScreen="false" 
type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" />';
$sound_html.='</object><br>'.$refresh_button.'</div>';
	$html='<div  style="float:left;">'.$html.'</div>';
	$html.=$sound_html;
	$html='<div  style="float:none;">'.$html.'</div>';

        $captcha['form']['captcha_response'] = array(
          '#type' => 'hidden',
          '#value' => 'phpcaptcha',
        );
        $captcha['form']['captcha_form'] = array(
          '#type' => 'item',
          '#value' => $html
        );
        $captcha['form']['captcha_response'] = array(
          '#type' => 'textfield',
          '#title' => t('What code is in the image?'),
          '#description' => t('Enter the characters shown in the image.'),
          '#weight' => 10,
          '#required' => TRUE,
          '#size' => 15,
        );


      }
      return $captcha;
  }
}

/**
 * CAPTCHA Callback; Validates the reCAPTCHA code.
 */
function phpcaptcha_captcha_validation($solution = NULL, $response = NULL) {
	_phpcaptcha_load_library();
        $img = new securimage();

	$valid = $img->check($response);
	return $valid;
}


/**
 * Load the phpcaptcha library.
 */
function _phpcaptcha_load_library() {
  module_load_include('php', 'phpcaptcha', 'phpcaptcha/securimage');
}

function _phpcaptcha_captcha_sound(){
	_phpcaptcha_load_library();
        $img = new securimage();
	$img->audio_path= dirname(__FILE__).'/phpcaptcha/audio/';
	$img->audio_format = (isset($_GET['format']) && in_array(strtolower($_GET['format']), array('mp3', 'wav')) ? strtolower($_GET['format']) : 'mp3'); //$img->setAudioPath('/path/to/securimage/audio/');}
	$img->outputAudioFile();
	exit();
}

function _phpcaptcha_captcha_image(){ 
	_phpcaptcha_load_library();
	$img = new securimage();
	$img->ttf_file      = dirname(__FILE__).'/phpcaptcha/'.'./AHGBold.ttf';
	$img->gd_font_file  = dirname(__FILE__).'/phpcaptcha/'.'gdfonts/automatic.gdf';
	// Change some settings
        $img->code_length = variable_get('phpcaptcha_code_length',6);
	$img->image_width = variable_get('phpcaptcha_image_width', '200');
	$img->image_height = variable_get('phpcaptcha_image_height',90);
	$img->perturbation = variable_get('phpcaptcha_perturbation',0.9); 
	$img->image_bg_color = new Securimage_Color( variable_get('phpcaptcha_image_bg_color','#0099CC'));
	$img->text_color = new Securimage_Color(variable_get('phpcaptcha_text_color',"#EAEAEA"));
	$img->text_transparency_percentage = variable_get('phpcaptcha_text_transparency_percentage',10); 
	$img->num_lines = variable_get('phpcaptcha_num_lines',8);
	$img->line_color = new Securimage_Color( variable_get('phpcaptcha_line_color',"#0000CC"));
	//$img->signature_color = new Securimage_Color(rand(0, 64), rand(64, 128), rand(128, 255));
	//$img->image_type = SI_IMAGE_PNG;

	$img->show(); // alternate use:  $img->show('/path/to/background_image.jpg');
	exit();
}
